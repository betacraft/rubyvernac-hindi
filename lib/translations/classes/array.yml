---
array:
  cname: Array
  cpumethods:
    "!": "!"
    "!=": "!="
    "!~": "!~"
    "<": "<"
    "<=": "<="
    "<=>": "<=>"
    "==": "=="
    "===": "==="
    "=~": "=~"
    ">": ">"
    ">=": ">="
    "[]": "[]"
    __id__: __id__
    __send__: __send__
    alias_method: alias_method
    allocate: allocate
    ancestors: ancestors
    attr: attr
    attr_accessor: attr_accessor
    attr_reader: attr_reader
    attr_writer: attr_writer
    autoload: autoload
    autoload?: autoload?
    class: class
    class_eval: class_eval
    class_exec: class_exec
    class_variable_defined?: class_variable_defined?
    class_variable_get: class_variable_get
    class_variable_set: class_variable_set
    class_variables: class_variables
    clone: clone
    const_defined?: const_defined?
    const_get: const_get
    const_missing: const_missing
    const_set: const_set
    const_source_location: const_source_location
    constants: constants
    define_method: define_method
    define_singleton_method: define_singleton_method
    deprecate_constant: deprecate_constant
    display: display
    dup: dup
    enum_for: enum_for
    eql?: eql?
    equal?: equal?
    extend: extend
    freeze: freeze
    frozen?: frozen?
    hash: hash
    include: include
    include?: include?
    included_modules: included_modules
    inspect: inspect
    instance_eval: instance_eval
    instance_exec: instance_exec
    instance_method: instance_method
    instance_methods: instance_methods
    instance_of?: instance_of?
    instance_variable_defined?: instance_variable_defined?
    instance_variable_get: instance_variable_get
    instance_variable_set: instance_variable_set
    instance_variables: instance_variables
    is_a?: is_a?
    itself: itself
    kind_of?: kind_of?
    method: method
    method_defined?: method_defined?
    methods: methods
    module_eval: module_eval
    module_exec: module_exec
    name: name
    new: new
    nil?: nil?
    object_id: object_id
    prepend: prepend
    private_class_method: private_class_method
    private_constant: private_constant
    private_instance_methods: private_instance_methods
    private_method_defined?: private_method_defined?
    private_methods: private_methods
    protected_instance_methods: protected_instance_methods
    protected_method_defined?: protected_method_defined?
    protected_methods: protected_methods
    public_class_method: public_class_method
    public_constant: public_constant
    public_instance_method: public_instance_method
    public_instance_methods: public_instance_methods
    public_method: public_method
    public_method_defined?: public_method_defined?
    public_methods: public_methods
    public_send: public_send
    remove_class_variable: remove_class_variable
    remove_instance_variable: remove_instance_variable
    remove_method: remove_method
    respond_to?: respond_to?
    send: send
    singleton_class: singleton_class
    singleton_class?: singleton_class?
    singleton_method: singleton_method
    singleton_methods: singleton_methods
    superclass: superclass
    taint: taint
    tainted?: tainted?
    tap: tap
    then: then
    to_enum: to_enum
    to_s: to_s
    to_yaml: to_yaml
    trust: trust
    try_convert: try_convert
    undef_method: undef_method
    untaint: untaint
    untrust: untrust
    untrusted?: untrusted?
    yaml_tag: yaml_tag
    yield_self: yield_self
  cprmethods:
    Array: Array
    Complex: Complex
    Float: Float
    Hash: Hash
    Integer: Integer
    Rational: Rational
    String: String
    __callee__: __callee__
    __dir__: __dir__
    __method__: __method__
    "`": "`"
    abort: abort
    at_exit: at_exit
    binding: binding
    block_given?: block_given?
    caller: caller
    caller_locations: caller_locations
    catch: catch
    eval: eval
    exec: exec
    exit: exit
    exit!: exit!
    extended: extended
    fail: fail
    fork: fork
    format: format
    gem: gem
    gem_original_require: gem_original_require
    gets: gets
    global_variables: global_variables
    included: included
    inherited: inherited
    initialize: initialize
    initialize_clone: initialize_clone
    initialize_copy: initialize_copy
    initialize_dup: initialize_dup
    iterator?: iterator?
    lambda: lambda
    load: load
    local_variables: local_variables
    loop: loop
    method_added: method_added
    method_missing: method_missing
    method_removed: method_removed
    method_undefined: method_undefined
    open: open
    p: p
    pp: pp
    prepended: prepended
    print: print
    printf: printf
    private: private
    proc: proc
    protected: protected
    public: public
    putc: putc
    puts: puts
    raise: raise
    rand: rand
    readline: readline
    readlines: readlines
    remove_const: remove_const
    require: require
    require_relative: require_relative
    respond_to_missing?: respond_to_missing?
    ruby2_keywords: ruby2_keywords
    select: select
    set_trace_func: set_trace_func
    singleton_method_added: singleton_method_added
    singleton_method_removed: singleton_method_removed
    singleton_method_undefined: singleton_method_undefined
    sleep: sleep
    spawn: spawn
    sprintf: sprintf
    srand: srand
    syscall: syscall
    system: system
    test: test
    throw: throw
    trace_var: trace_var
    trap: trap
    untrace_var: untrace_var
    using: using
    warn: warn
  ipumethods:
    "!": "!"
    "!=": "!="
    "!~": "!~"
    "&": "&"
    "*": "*"
    "+": "+"
    "-": "-"
    !!str '<<': !!str '<<'
    "<=>": "<=>"
    "==": "=="
    "===": "==="
    "=~": "=~"
    "[]": "[]"
    "[]=": "[]="
    __id__: __id__
    __send__: __send__
    all?: all?
    any?: any?
    append: append
    assoc: assoc
    at: at
    bsearch: bsearch
    bsearch_index: bsearch_index
    chain: chain
    chunk: chunk
    chunk_while: chunk_while
    class: class
    clear: clear
    clone: clone
    collect: collect
    collect!: collect!
    collect_concat: collect_concat
    combination: combination
    compact: compact
    compact!: compact!
    concat: concat
    count: count
    cycle: cycle
    deconstruct: deconstruct
    define_singleton_method: define_singleton_method
    delete: delete
    delete_at: delete_at
    delete_if: delete_if
    detect: detect
    difference: difference
    dig: dig
    display: display
    drop: drop
    drop_while: drop_while
    dup: dup
    each: each
    each_cons: each_cons
    each_entry: each_entry
    each_index: each_index
    each_slice: each_slice
    each_with_index: each_with_index
    each_with_object: each_with_object
    empty?: empty?
    entries: entries
    enum_for: enum_for
    eql?: eql?
    equal?: equal?
    extend: extend
    fetch: fetch
    fill: fill
    filter: filter
    filter!: filter!
    filter_map: filter_map
    find: find
    find_all: find_all
    find_index: find_index
    first: first
    flat_map: flat_map
    flatten: flatten
    flatten!: flatten!
    freeze: freeze
    frozen?: frozen?
    grep: grep
    grep_v: grep_v
    group_by: group_by
    hash: hash
    include?: include?
    index: index
    inject: inject
    insert: insert
    inspect: inspect
    instance_eval: instance_eval
    instance_exec: instance_exec
    instance_of?: instance_of?
    instance_variable_defined?: instance_variable_defined?
    instance_variable_get: instance_variable_get
    instance_variable_set: instance_variable_set
    instance_variables: instance_variables
    intersection: intersection
    is_a?: is_a?
    itself: itself
    join: join
    keep_if: keep_if
    kind_of?: kind_of?
    last: last
    lazy: lazy
    length: length
    map: map
    map!: map!
    max: max
    max_by: max_by
    member?: member?
    method: method
    methods: methods
    min: min
    min_by: min_by
    minmax: minmax
    minmax_by: minmax_by
    nil?: nil?
    none?: none?
    object_id: object_id
    one?: one?
    pack: pack
    partition: partition
    permutation: permutation
    pop: pop
    prepend: prepend
    private_methods: private_methods
    product: product
    protected_methods: protected_methods
    public_method: public_method
    public_methods: public_methods
    public_send: public_send
    push: push
    rassoc: rassoc
    reduce: reduce
    reject: reject
    reject!: reject!
    remove_instance_variable: remove_instance_variable
    repeated_combination: repeated_combination
    repeated_permutation: repeated_permutation
    replace: replace
    respond_to?: respond_to?
    reverse: reverse
    reverse!: reverse!
    reverse_each: reverse_each
    rindex: rindex
    rotate: rotate
    rotate!: rotate!
    sample: sample
    select: select
    select!: select!
    send: send
    shift: shift
    shuffle: shuffle
    shuffle!: shuffle!
    singleton_class: singleton_class
    singleton_method: singleton_method
    singleton_methods: singleton_methods
    size: size
    slice: slice
    slice!: slice!
    slice_after: slice_after
    slice_before: slice_before
    slice_when: slice_when
    sort: sort
    sort!: sort!
    sort_by: sort_by
    sort_by!: sort_by!
    sum: sum
    taint: taint
    tainted?: tainted?
    take: take
    take_while: take_while
    tally: tally
    tap: tap
    then: then
    to_a: to_a
    to_ary: to_ary
    to_enum: to_enum
    to_h: to_h
    to_s: to_s
    to_yaml: to_yaml
    transpose: transpose
    trust: trust
    union: union
    uniq: uniq
    uniq!: uniq!
    unshift: unshift
    untaint: untaint
    untrust: untrust
    untrusted?: untrusted?
    values_at: values_at
    yield_self: yield_self
    zip: zip
    "|": "|"
  iprmethods:
    Array: Array
    Complex: Complex
    Float: Float
    Hash: Hash
    Integer: Integer
    Rational: Rational
    String: String
    __callee__: __callee__
    __dir__: __dir__
    __method__: __method__
    "`": "`"
    abort: abort
    at_exit: at_exit
    autoload: autoload
    autoload?: autoload?
    binding: binding
    block_given?: block_given?
    caller: caller
    caller_locations: caller_locations
    catch: catch
    eval: eval
    exec: exec
    exit: exit
    exit!: exit!
    fail: fail
    fork: fork
    format: format
    gem: gem
    gem_original_require: gem_original_require
    gets: gets
    global_variables: global_variables
    initialize: initialize
    initialize_clone: initialize_clone
    initialize_copy: initialize_copy
    initialize_dup: initialize_dup
    iterator?: iterator?
    lambda: lambda
    load: load
    local_variables: local_variables
    loop: loop
    method_missing: method_missing
    open: open
    p: p
    pp: pp
    print: print
    printf: printf
    proc: proc
    putc: putc
    puts: puts
    raise: raise
    rand: rand
    readline: readline
    readlines: readlines
    require: require
    require_relative: require_relative
    respond_to_missing?: respond_to_missing?
    set_trace_func: set_trace_func
    singleton_method_added: singleton_method_added
    singleton_method_removed: singleton_method_removed
    singleton_method_undefined: singleton_method_undefined
    sleep: sleep
    spawn: spawn
    sprintf: sprintf
    srand: srand
    syscall: syscall
    system: system
    test: test
    throw: throw
    trace_var: trace_var
    trap: trap
    untrace_var: untrace_var
    warn: warn
